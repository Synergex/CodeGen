<!DOCTYPE html>
<html>
<head lang="en">
<title>Generic Expansion Tokens</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?a60db89d" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?a60db89d" />
<link type="text/css" rel="stylesheet" href="../css/app.css?a60db89d" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Generic Expansion Tokens</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p class="ps0"><span class="ts1">&nbsp;</span></p>
      <p class="ps5"><span class="ts3">Generic </span><a href="expansiontokens.htm" class="hs8">expansion tokens</a><span class="ts3">&nbsp;are tokens which insert generic (non structure specific) information or take some generic action, and can be used at anywhere in a template file.</span></p>
      <div class="block0">
        <table class="tbl1">
          <tr class="row0">
            <td class="cell13">
              <p class="ps5"><span class="ts8">Generic Token</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts8">Description</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell15">
              <p class="ps13"><a id="&lt;AUTHOR&gt;"></a><span class="ts14">&lt;AUTHOR&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts your name, which you specify via the environment variable </span><a href="installingandconfiguringcodegen.htm#author" class="hs3">CODEGEN_AUTHOR</a><span class="ts3">.</span></p>
              <p class="ps5"><span class="ts3">When you install CodeGen you are prompted to enter your name during the installation process and the value that you enter is saved in the Windows Registry.&nbsp; If CodeGen finds that the environment variable CODEGEN_AUTHOR is not set then it will attempt to read this value from the registry and will set the CODEGEN_AUTHOR environment variable automatically.</span></p>
              <p class="ps5"><span class="ts3">If no author name can be determined the string </span><span class="ts6">CodeGen</span><span class="ts3">&nbsp;is inserted.</span></p>
              <p class="ps5"><span class="ts3">Video: </span><a href="https://www.youtube.com/watch?v=-qBOIB_iMkI&amp;list=PLq0aGk6nTIVvbmOwjlCu6bZeY6esBCjI-&amp;index=3" target="_blank" class="hs6">Using AUTHOR and COMPANY Tokens</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell15">
              <p class="ps13"><a id="&lt;CODEGEN_VERSION&gt;"></a><span class="ts14">&lt;CODEGEN_VERSION&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the CodeGen version number.</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">CodeGen V5.6.5</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;COMPANY&gt;"></a><span class="ts14">&lt;COMPANY&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">This token is inserts your company name, which you specify via the environment variable </span><a href="installingandconfiguringcodegen.htm#company" class="hs3">CODEGEN_COMPANY</a><span class="ts3">.</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">Synergex Professional Services Group</span></p>
              <p class="ps5"><span class="ts3">When you install CodeGen on a Windows system you are prompted to enter your company during the installation process and the value that you enter is saved in the Windows Registry.&nbsp; If CodeGen finds that the environment variable CODEGEN_COMPANY is not set then it will attempt to read this value from the registry and will set the CODEGEN_COMPANY environment variable automatically.</span></p>
              <p class="ps5"><span class="ts3">If no company name can be determined the string </span><span class="ts6">Synergex</span><span class="ts3">&nbsp;is inserted.</span></p>
              <p class="ps5"><span class="ts3">Video:</span><span class="ts8">&nbsp; </span><a href="https://www.youtube.com/watch?v=-qBOIB_iMkI&amp;list=PLq0aGk6nTIVvbmOwjlCu6bZeY6esBCjI-&amp;index=3" target="_blank" class="hs6">Using AUTHOR and COMPANY Tokens</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_1_DECREMENT&gt;"></a><span class="ts14">&lt;COUNTER_1_DECREMENT&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">This token decrements the value of counter 1 by 1. If the token appears inside of an expression that currently evaluates to false then the value will not be decremented.</span></p>
              <p class="ps5"><span class="ts3">This token does not cause any text to be written to the output stream.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_1_INCREMENT&gt;"></a><span class="ts14">&lt;COUNTER_1_INCREMENT&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">This token increments the value of counter 1 by 1. If the token appears inside of an expression that currently evaluates to false then the value will not be incremented.</span></p>
              <p class="ps5"><span class="ts3">This token does not cause any text to be written to the output stream.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_1_RESET&gt;"></a><span class="ts14">&lt;COUNTER_1_RESET&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">This token resets the value of counter 1 to 0. If the token appears inside of an expression that currently evaluates to false then the value will not be reset.</span></p>
              <p class="ps5"><span class="ts3">This token does not cause any text to be written to the output stream.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_1_VALUE&gt;"></a><span class="ts14">&lt;COUNTER_1_VALUE&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">Inserts the current value of counter 1 into the output stream. If the token appears inside of an expression that currently evaluates to false then the value will not be inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_2_DECREMENT&gt;"></a><span class="ts14">&lt;COUNTER_2_DECREMENT&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">This token decrements the value of counter 2 by 1. If the token appears inside of an expression that currently evaluates to false then the value will not be decremented.</span></p>
              <p class="ps5"><span class="ts3">This token does not cause any text to be written to the output stream.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_2_INCREMENT&gt;"></a><span class="ts14">&lt;COUNTER_2_INCREMENT&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">This token increments the value of counter 2 by 1. If the token appears inside of an expression that currently evaluates to false then the value will not be incremented.</span></p>
              <p class="ps5"><span class="ts3">This token does not cause any text to be written to the output stream.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_2_RESET&gt;"></a><span class="ts14">&lt;COUNTER_2_RESET&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">This token resets the value of counter 2 to 0. If the token appears inside of an expression that currently evaluates to false then the value will not be reset.</span></p>
              <p class="ps5"><span class="ts3">This token does not cause any text to be written to the output stream.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;COUNTER_2_VALUE&gt;"></a><span class="ts14">&lt;COUNTER_2_VALUE&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">CodeGen provides two built in counters that developers can use when designing template files. For each code generation task both counters start off with a value of zero. Tokens in the template file can cause the value of each counter to be incremented, decremented or reset to zero. Another token can be used to insert the current value of a counter into the text output stream.</span></p>
              <p class="ps5"><span class="ts3">Inserts the current value of counter 2 into the output stream. If the token appears inside of an expression that currently evaluates to false then the value will not be inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;DATABASE&gt;"></a><span class="ts14">&lt;DATABASE&gt;</span></p>
              <p><span class="ts6">&nbsp;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts the name of the current relational database being targeted. For more information refer to the command line option </span><a href="commandlinereference.htm#option_database" class="hs3">-database</a><span class="ts3">.</span></p>
              <p><span class="ts6">&nbsp;</span></p>
              <p class="ps5"><span class="ts3">Possible Values:&nbsp; MySQL, PostgreSQL, SQLServer</span></p>
              <p class="ps5"><span class="ts3">See also:</span><span class="ts8">&nbsp; </span><a href="commandlinereference.htm#option_database" class="hs6">Command line option -database</a><span class="ts6">, </span><a href="installingandconfiguringcodegen.htm#CODEGEN_DATABASE_TYPE" class="hs6">Environment variable CODEGEN_DATABASE_TYPE</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;DATE&gt;"></a><span class="ts14">&lt;DATE&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the current date in MM/DD/YYYY format.</span></p>
              <p class="ps5"><span class="ts3">Example: </span><span class="ts6">10/23/2008</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;DATE1&gt;"></a><span class="ts14">&lt;DATE1&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the current date in DD/MM/YYYY format.</span></p>
              <p class="ps5"><span class="ts3">Example:</span><span class="ts8">&nbsp;</span><span class="ts3">&nbsp;</span><span class="ts6">23/10/2008</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;DAY&gt;"></a><span class="ts14">&lt;DAY&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the current numeric day of the month in DD format.</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">23</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;DAYNAME&gt;"></a><span class="ts14">&lt;DAYNAME&gt;</span></p>
              <p><span class="ts6">&nbsp;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts the current alphabetic day of the week.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">Monday</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;ENV:variable&gt;"></a><span class="ts14">&lt;ENV:variable&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the value of an environment variable into the output stream. If the environment variable does not exist then an error is generated.</span></p>
              <p class="ps5"><span class="ts3">Note that the translation value of the environment variable may generic and structure expansion tokens.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;ENVIFEXIST:variable&gt;"></a><span class="ts14">&lt;ENVIFEXIST:variable&gt;</span></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">Inserts the value of an environment variable into the output stream. If the environment variable does not exist then the token will be ignored and no error will be generated.</span></p>
              <p class="ps5"><span class="ts3">Note that the translation value of the environment variable may generic and structure expansion tokens.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;FILE:name.ext&gt;"></a><span class="ts14">&lt;FILE:name.ext&gt;</span></p>
              <p class="ps5"><span class="ts8">Video:</span><span class="ts3">&nbsp;</span><a href="https://www.youtube.com/watch?v=dI_jx6qSoPs&amp;index=7&amp;list=PLq0aGk6nTIVvbmOwjlCu6bZeY6esBCjI-" target="_blank" class="hs6">Using Template Include Files</a></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">This token reads the content of a text file and inserts the resulting data into the output stream. The file can either be located in the current directory, or you can include a logical name specification to specify the location of the file. If the file is not found then an error is generated.</span></p>
              <p class="ps5"><span class="ts3">The file may contain any number of lines of text, and may also contain generic or structure expansion tokens, which will be expanded in the usual way. If the token exists on the same line as and subsequent to other text, then the first record from the file will follow that text in the resulting output file. Any subsequent records from the file will appear on new lines in the output file.</span></p>
              <p class="ps5"><span class="ts3">Examples:&nbsp; </span><span class="ts6">&lt;FILE:name.ext&gt;, &lt;FILE:LOCATION:name.ext&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps13"><a id="&lt;FILEIFEXIST:name.ext&gt;"></a><span class="ts14">&lt;FILEIFEXIST:name.ext&gt;</span></p>
              <p class="ps5"><span class="ts8">Video: </span><a href="https://www.youtube.com/watch?v=dI_jx6qSoPs&amp;index=7&amp;list=PLq0aGk6nTIVvbmOwjlCu6bZeY6esBCjI-" target="_blank" class="hs6">Using Template Include Files</a></p>
            </td>
            <td class="cell14">
              <p class="ps5"><span class="ts3">This token reads the content of a text file and inserts the resulting data into the output stream. The file can either be located in the current directory, or you can include a logical name specification to specify the location of the file. If the file is not found then the token is ignored and no error is generated.</span></p>
              <p class="ps5"><span class="ts3">The file may contain any number of lines of text, and may also contain generic or structure expansion tokens, which will be expanded in the usual way. If the token exists on the same line as and subsequent to other text, then the first record from the file will follow that text in the resulting output file. Any subsequent records from the file will appear on new lines in the output file.</span></p>
              <p class="ps5"><span class="ts3">Examples:&nbsp; </span><span class="ts6">&lt;FILEIFEXIST:name.ext&gt;, &lt;FILEIFEXIST:LOCATION:name.ext&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;GUID&gt;"></a><span class="ts14">&lt;GUID&gt;</span></p>
              <p class="ps0"><span class="ts1">&nbsp;</span></p>
              <p class="ps0"><span class="ts1">(Several variations, see notes)</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">CodeGen supports inserting GUID values into generated code.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">{8d881f51-8d3e-4ee7-9e20-17ee24452da9}</span></p>
              <p class="ps5"><span class="ts3">Tokens:</span><span class="ts8">&nbsp;</span><span class="ts3">&nbsp;</span><span class="ts6">&lt;GUID&gt;, &lt;GUID_NOBRACE&gt;, &lt;GUID1&gt;, &lt;GUID1_NOBRACE&gt;, &lt;GUID2&gt;, &lt;GUID2_NOBRACE&gt;, &lt;GUID3&gt;, &lt;GUID3_NOBRACE&gt;</span></p>
              <p class="ps5"><span class="ts3">The </span><span class="ts6">&lt;GUID&gt;</span><span class="ts3">&nbsp;and </span><span class="ts6">&lt;GUID_NOBRACE&gt;</span><span class="ts3">&nbsp;tokens always generate a new GUID value every time they are encountered, either with or without surrounding brace characters.</span></p>
              <p class="ps5"><span class="ts3">The tokens that include numbers (e.g. </span><span class="ts6">&lt;GUID1&gt;</span><span class="ts3">) generate a new GUID value the first time they are encountered, but then maintain that same value for the remainder of that invocation of CodeGen. The </span><span class="ts6">&lt;GUID1&gt;</span><span class="ts3">, </span><span class="ts6">&lt;GUID2&gt;</span><span class="ts3">&nbsp;and </span><span class="ts6">&lt;GUID3&gt;</span><span class="ts3">&nbsp;tokens can be used to persist and refer back to up to three separate GUID values.</span></p>
              <p class="ps5"><span class="ts3">Alternates: </span><span class="ts8">&nbsp;</span><span class="ts6">&lt;guid&gt;, &lt;guid_nobrace&gt;, &lt;guid1&gt;, &lt;guid1_nobrace&gt;, &lt;guid2&gt;, &lt;guid3_nobrace&gt;, &lt;guid3&gt;, &lt;gui3_nobrace&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;HOST_DNS_NAME&gt;"></a><span class="ts14">&lt;HOST_DNS_NAME&gt;</span></p>
              <p><span class="ts6">&nbsp;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts the DNS name of the computer that you are running CodeGen on. If there is a problem determining the DNS name then &quot;LOCALHOST&quot; is used.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p class="ps5"><span class="ts3">Example: IVES.SYNERGEX.COM</span></p>
              <p class="ps5"><span class="ts3">Alternates: </span><span class="ts6">&lt;host_dns_name&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;HOST_IP_ADDRESS&gt;"></a><span class="ts14">&lt;HOST_IP_ADDRESS&gt;</span></p>
              <p><span class="ts6">&nbsp;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts the IP address name of the computer that you are running CodeGen on. If the system has multiple IP addresses then the first IP address reported by Windows is used. If there is a problem determining the IP address then the &quot;localhost&quot; address of &quot;127.0.0.1&quot; is used.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">10.1.1.254</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;MONTH&gt;"></a><span class="ts14">&lt;MONTH&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the current numeric month (MM). </span></p>
              <p class="ps5"><span class="ts3">Example: </span><span class="ts8">&nbsp;</span><span class="ts6">10</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;MONTHNAME&gt;"></a><span class="ts14">&lt;MONTHNAME&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the alphanumeric name of the current month.</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">October</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;MONTHSHORTNAME&gt;"></a><span class="ts14">&lt;MONTHSHORTNAME&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the abbreviated alphanumeric name of the current month.</span></p>
              <p class="ps5"><span class="ts3">Example:&nbsp; </span><span class="ts6">Oct</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;NAMESPACE&gt;"></a><span class="ts14">&lt;NAMESPACE&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the default namespace, which can be specified either via the environment variable SYNDEFNS, or via the </span><a href="commandlinereference.htm#option_n" class="hs3">-n command line option</a><span class="ts3">.</span></p>
              <p class="ps5"><span class="ts3">Example:</span><span class="ts8">&nbsp;</span><span class="ts3">&nbsp;</span><span class="ts6">SynPSG.CodeGen</span></p>
              <p class="ps5"><span class="ts3">If a namespace token is encountered and no default namespace can be determined then CodeGen will report an error.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;RANDOM_10&gt;"></a><span class="ts14">&lt;RANDOM_10&gt;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts a random number in the range of 1 to 10.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;RANDOM_100&gt;"></a><span class="ts14">&lt;RANDOM_100&gt;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts a random number in the range of 1 to 100.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;RANDOM_1000&gt;"></a><span class="ts14">&lt;RANDOM_1000&gt;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts a random number in the range of 1 to 1000.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;RANDOM_INT&gt;"></a><span class="ts14">&lt;RANDOM_INT&gt;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts a random number in the range of 1 to 2147483647.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;TEMPLATE&gt;"></a><span class="ts14">&lt;TEMPLATE&gt;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts the base name of the template file. The base name of the template is the name of the template file with no file extension.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p class="ps5"><span class="ts3">Example (if processing a template called get_record.tpl): </span><span class="ts6">GET_RECORD</span></p>
              <p class="ps5"><span class="ts3">Alternates:&nbsp; </span><span class="ts6">&lt;template&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;TIME&gt;"></a><span class="ts14">&lt;TIME&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the current time in 24 hour HH:MM format. </span></p>
              <p class="ps5"><span class="ts3">Example: </span><span class="ts6">16:06</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell18">
              <p class="ps0"><a id="&lt;TIMEZONE_OFFSET&gt;"></a><span class="ts14">&lt;TIMEZONE_OFFSET&gt;</span></p>
            </td>
            <td class="cell14">
              <p><span class="ts3">Inserts the current timezone offset from UTC in [+-]HH:MM format.</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p><span class="ts3">Example: </span><span class="ts6">-08:00</span></p>
              <p><span class="ts6">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;WEEKDAY&gt;"></a><span class="ts14">&lt;WEEKDAY&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the name of the current weekday. </span></p>
              <p class="ps5"><span class="ts3">Example: </span><span class="ts6">Thursday</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell17">
              <p class="ps13"><a id="&lt;YEAR&gt;"></a><span class="ts14">&lt;YEAR&gt;</span></p>
            </td>
            <td class="cell16">
              <p class="ps5"><span class="ts3">Inserts the current year in YYYY format.</span></p>
              <p class="ps5"><span class="ts3">Example: </span><span class="ts6">2020</span></p>
            </td>
          </tr>
        </table>
      </div>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps14"><span class="ts12">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>