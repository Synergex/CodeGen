<!DOCTYPE html>
<html>
<head lang="en">
<title>Expansion Tokens</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?fa2032ed" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?fa2032ed" />
<link type="text/css" rel="stylesheet" href="../css/app.css?fa2032ed" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Expansion Tokens</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p class="ps0"><span class="ts1">&nbsp;</span></p>
      <p class="ps4"><span class="ts3">Expansion tokens are special symbols that can be used within a </span><a href="templatefiles.htm" class="hs11">template file</a><span class="ts3">, either to cause CodeGen to take some special action, or to refer to some information from a metadata source.&nbsp; Most expansion tokens cause CodeGen to output some piece of information to the output stream for the current template.&nbsp; In some cases the information that is output is fairly generic, for example the current date or time, but in many cases the information is derived from an external source such as a repository structure. CodeGen recognizes and processes several different categories of expansion tokens.&nbsp; Some of these tokens can be used at any time, whilst others can only be used within a certain context in a template file.</span></p>
      <p class="ps4"><span class="ts3">Expansion tokens consist of a single tag (a special keyword delimited by less-than (&lt;) and greater-than (&gt;) characters) and most cause some value to be written to the output stream for the current template.&nbsp; An example of an expansion token of this type is the </span><a href="genericexpansiontokens.htm#%3CDATE%3E" class="hs12">&lt;DATE&gt;</a><span class="ts3">&nbsp;token that was discussed earlier.</span></p>
      <p class="ps4"><span class="ts3">When CodeGen processes a template file in order to create an output file it is constantly searching for known expansion tokens, and when a token is encountered some action is taken based on the name and nature of the token.</span></p>
      <div class="block0">
        <table class="tbl1">
          <tr class="row0">
            <td class="cell0">
              <p class="ps4"><a href="genericexpansiontokens.htm" class="hs11">Generic Tokens</a></p>
            </td>
            <td class="cell1">
              <p class="ps4"><span class="ts3">Generic tokens are tokens which can be used in any template file.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="structureexpansiontokens.htm" class="hs11">Structure Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Structure tokens are tokens which are replaced with some piece of information obtained from, or some piece of code derived from a Repository structure. Structure tokens can only be used when processing a template in conjunction with a Repository structure. Processing a template file which uses one or more structure tokens without referencing a Repository structure will cause an error during code generation.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="fieldloops.htm" class="hs11">Field Loop Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Field loop tokens are tokens which are replaced with some piece of information obtained from, or some piece of code derived from a Repository field definition. Field loop tokens are only valid inside a field loop. This again implies that a Repository structure is required in order to process a template containing field loop tokens. Processing a template file which uses one or more field loop tokens without referencing a Repository structure will cause an error during code generation.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="fieldloopexpressiontokens.htm" class="hs11">Field Loop Expression Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Field loop expression tokens are tokens which allow you to control whether a certain piece of code is emitted to the output file or not, based on the evaluation of some expression based on the attributes of field.&nbsp; For example, you could use a conditional expression to only emit a piece of code if a field is marked as a required field, or if the data type of a field is decimal.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="keyloops.htm" class="hs11">Key Loop Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Key loop tokens are tokens which are replaced with some piece of information obtained from, or some piece of code derived from a Repository key definition. Key loop tokens are only valid inside a key loop.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="keysegmentloops.htm" class="hs11">Key Segment Loop Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Key segment loop tokens are tokens which are replaced with some piece of information obtained from, or some piece of code derived from a Repository key segment definition. Key segment loop tokens are only valid inside a key segment loop.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="relationloops.htm" class="hs11">Relation Loop Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Relation loop tokens are tokens which are replaced with some piece of information obtained from, or some piece of code derived from a Repository relation definition. Relation loop tokens are only valid inside a relation loop.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="windowexpansiontokens.htm" class="hs11">Window Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Window tokens are tokens which are replaced with some piece of information about a window definition.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="buttonloops.htm" class="hs11">Button Loop Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Button loop tokens are tokens which are replaced with some piece of information relating to a button definition.&nbsp; Button loop tokens are only valid within a button loop.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="userdefinedexpansiontokens.htm" class="hs11">User-Defined Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">User defined tokens are non-standard tokens that can be defined by you in order to have CodeGen generate code other than what it natively supports. There are several ways of defining user defined tokens. User defined tokens do not inherently require the use of a Repository structure during code generation, unless the code generated by the user defined tokens includes other structure or field loop tokens.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell2">
              <p class="ps4"><a href="looputilityexpansiontokens.htm" class="hs11">Loop Utility Tokens</a></p>
            </td>
            <td class="cell3">
              <p class="ps4"><span class="ts3">Loop utility tokens insert information based on the processing status of the current template file loop construct, and can be used in any of the loop constructs.</span></p>
            </td>
          </tr>
        </table>
      </div>
      <h2 class="hd1"><span class="ts2">Expansion Token Variations</span></h2>
      <p class="ps4"><span class="ts3">All expansion tokens are valid in upper case (as shown in this documentation) and many are valid only in upper case. Generally, when the name of an expansion token appears in uppercase, then the associated replacement text that is written to the output stream will also be in upper case. But there are some exceptions to this rule, typically when the token refers to a piece of metadata which resolves to a piece of &ldquo;free text&rdquo; such as descriptions that were entered as free text.</span></p>
      <p class="ps4"><span class="ts3">Some tokens are documented to have &quot;alternate forms&quot;.&nbsp; For example, the </span><a href="structureexpansiontokens.htm#STRUCTURE_NAME" class="hs12">&lt;STRUCTURE_NAME&gt;</a><span class="ts3">&nbsp;token, which normally outputs the name of the repository structure in all uppercase characters, has five alternate forms, as follows:</span></p>
      <div class="block0">
        <table class="tbl1">
          <tr class="row1">
            <td class="cell4">
              <h3 class="hd1"><span class="ts10">Token Type</span></h3>
            </td>
            <td class="cell5">
              <h3 class="hd1"><span class="ts10">Token</span></h3>
            </td>
            <td class="cell6">
              <h3 class="hd1"><span class="ts10">Description</span></h3>
            </td>
            <td class="cell7">
              <h3 class="hd1"><span class="ts10">Example</span></h3>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell8">
              <p class="ps4"><span class="ts3">Upper-case</span></p>
            </td>
            <td class="cell9">
              <p class="ps4"><span class="ts5">&lt;STRUCTURE_NAME&gt;</span></p>
            </td>
            <td class="cell10">
              <p class="ps4"><span class="ts3">This token causes the name of the current structure to be sent to the output file, in all uppercase, and with underscores preserved.</span></p>
            </td>
            <td class="cell11">
              <p class="ps4"><span class="ts3">CUSTOMER_CONTACT</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell8">
              <p class="ps4"><span class="ts3">Lower-case</span></p>
            </td>
            <td class="cell12">
              <p class="ps4"><span class="ts5">&lt;structure_name&gt;</span></p>
            </td>
            <td class="cell10">
              <p class="ps4"><span class="ts3">This token causes the name of the current structure to be sent to the output file, in all lowercase, and with underscores preserved.</span></p>
            </td>
            <td class="cell11">
              <p class="ps4"><span class="ts3">customer_contact</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell8">
              <p class="ps4"><span class="ts3">Mixed-case</span></p>
            </td>
            <td class="cell12">
              <p class="ps4"><span class="ts5">&lt;Structure_Name&gt;</span></p>
            </td>
            <td class="cell10">
              <p class="ps4"><span class="ts3">This token causes the name of the current structure to be sent to the output file, in lowercase, but with the first letter of each word upper-cased, and with underscores preserved.</span></p>
            </td>
            <td class="cell11">
              <p class="ps4"><span class="ts3">Customer_Contact</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell8">
              <p class="ps4"><span class="ts3">&quot;xf&quot;-case</span></p>
            </td>
            <td class="cell12">
              <p class="ps4"><span class="ts5">&lt;Structure_name&gt;</span></p>
            </td>
            <td class="cell10">
              <p class="ps4"><span class="ts3">This token causes the name of the current structure to be sent to the output file, in lowercase, but with the first letter of the first word upper-cased, and with underscores preserved. This format is compatible with the way in which GENCS and GENJAVA expose Synergy data to xfNetLink clients.</span></p>
            </td>
            <td class="cell11">
              <p class="ps4"><span class="ts3">Customer_contact</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell8">
              <p class="ps4"><span class="ts3">Pascal-case</span></p>
            </td>
            <td class="cell12">
              <p class="ps4"><span class="ts5">&lt;StructureName&gt;</span></p>
            </td>
            <td class="cell10">
              <p class="ps4"><span class="ts3">This token causes the name of the current structure to be sent to the output file in &ldquo;pascal-case&rdquo;. The string is lower-cased and then any character following anything except 0-9, A-Z and a-z is upper-cased. Then anything other than 0-9, A-Z and a-z is removed, and finally the first character is upper-cased.</span></p>
            </td>
            <td class="cell11">
              <p class="ps4"><span class="ts3">CustomerContact</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell8">
              <p class="ps4"><span class="ts3">Camel-case</span></p>
            </td>
            <td class="cell12">
              <p class="ps4"><span class="ts5">&lt;structureName&gt;</span></p>
            </td>
            <td class="cell10">
              <p class="ps4"><span class="ts3">This token causes the name of the current structure to be sent to the output file in &ldquo;camel-case&rdquo;. The string is lower-cased and then any character following anything except 0-9, A-Z and a-z is upper-cased. Finally anything other than 0-9, A-Z and a-z is removed.</span></p>
            </td>
            <td class="cell11">
              <p class="ps4"><span class="ts3">customerContact</span></p>
            </td>
          </tr>
        </table>
      </div>
      <p class="ps4"><span class="ts3">If an expansion token is not documented to have alternate forms then that token is ONLY valid when typed in upper case. CodeGen will not act upon tokens that it does not recognize. Any token that CodeGen does not explicitly recognize will simply be ignored, and written to the output stream. If you see tokens in your output file, check your spelling and case sensitivity. The only exception to this rule is if you are using &ldquo;user defined tokens&rdquo; which are documented later.</span></p>
      <p class="ps4"><span class="ts3">&nbsp;</span></p>
      <p class="ps4"><span class="ts3">&nbsp;</span></p>
      <p class="ps4"><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps14"><span class="ts11">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>