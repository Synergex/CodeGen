<!DOCTYPE html>
<html>
<head lang="en">
<title>Structure Mapping</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?cc828d8d" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?cc828d8d" />
<link type="text/css" rel="stylesheet" href="../css/app.css?cc828d8d" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Structure Mapping</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p class="ps0"><span class="ts1">&nbsp;</span></p>
      <p class="ps3"><span class="ts3">There are occasions when it is useful to be able to process more than one repository structure at the same time, or at least to have the ability to make references to a second structure, or fields in the second structure.</span></p>
      <p class="ps3"><span class="ts3">For example, consider the situation where you are creating routines which you will use to access data in a relational database table. One of the routines that you create might be responsible for creating a relational database table based on the attributes of a repository structure (fields become columns, etc.). You may find that the repository structure does not quite meet the requirements of what you are trying to achieve. For example, you may want to assign different names to the columns it the database table, omit some fields from the table, or perhaps change some data types. You can&rsquo;t change the current repository structure to meet your new requirements, because that would impact your other applications, and obviously the current structure needs to match the layout of the actual data file.</span></p>
      <p class="ps3"><span class="ts3">To assist in addressing issues like these, CodeGen allows you to create a new repository structure and then &ldquo;map&rdquo; the new structure to an existing structure.&nbsp; You can also map fields in the new structure to fields in the original structure.</span></p>
      <p class="ps3"><span class="ts3">To map a new structure to an existing structure you add a special code into the new structures long description or user text field, like this:</span></p>
      <p class="ps18"><a id="MAP"></a><span class="ts13">@MAP=original_structure;</span></p>
      <p class="ps3"><span class="ts3">To map fields in your new structure to fields in an existing structure, add @MAP={otherfield}; to the new fields long description or user text string, like this:</span></p>
      <p class="ps12"><span class="ts5">@MAP=original_field;</span></p>
      <p class="ps3"><span class="ts3">Note that in both cases it is important that the word MAP appears in uppercase, and there should be no spaces between the leading </span><span class="ts7">@</span><span class="ts3">&nbsp;character and the trailing </span><span class="ts7">;</span><span class="ts3">&nbsp;(semi-colon) character.</span></p>
      <h2 class="hd1"><span class="ts2">Creating Mapped Structures</span></h2>
      <p class="ps3"><span class="ts3">To assist you in creating mapped structures in the repository, CodeGen includes a utility program called </span><a href="mappreputility.htm" class="hs3">MapPrep</a><span class="ts3">. This utility can significantly reduce the amount of effort required to create mapped structures, especially when the structure has a large number of fields.</span></p>
      <h2 class="hd1"><span class="ts2">Mapped Field Conversions</span></h2>
      <p class="ps3"><span class="ts3">When performing field mapping, you may optionally specify functions to be called when data is mapped into the field in the new target structure, or unmapped back into the field in the original structure. This can be useful if you need to perform transformations on the data as mapping occurs. For example, you may wish to convert the data in a description field between uppercase in the original field, and mixed case in the new field, or convert between a decimal field in the original structure and an implied decimal in the new structure.</span></p>
      <p class="ps3"><span class="ts3">To specify a mapping conversion function for a mapped field you add another special code in the fields&rsquo; user text string or long description, like this:</span></p>
      <p class="ps18"><a id="MAPF"></a><span class="ts13">@MAPF=mapping_function;</span></p>
      <p class="ps3"><span class="ts3">To specify a mapping un-conversion function for a mapped field you add another special code in the fields&rsquo; user text string or long description, like this:</span></p>
      <p class="ps18"><a id="UNMAPF"></a><span class="ts13">@UNMAPF=unmapping_function;</span></p>
      <h2 class="hd1"><span class="ts2">Writing Conversion Functions</span></h2>
      <p class="ps3"><span class="ts3">Mapping and unmapping functions must be declared as external functions, with a return value data type which matches the target field.&nbsp; They must accept a single parameter which is used to pass in the original value to be mapped or unmapped.&nbsp; For example:</span></p>
      <p class="ps12"><span class="ts21">function </span><span class="ts5">DivideBy100, d.</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts20">required in</span><span class="ts5">&nbsp;originalValue, d</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts20">endparams</span><br /><span class="ts21">proc</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts20">freturn </span><span class="ts5">(originalValue / 100.0)</span><br /><span class="ts21">endfunction</span></p>
      <p class="ps3"><span class="ts5">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps11"><span class="ts11">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>