<!DOCTYPE html>
<html>
<head lang="en">
<title>Key Loops</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?67b3301d" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?67b3301d" />
<link type="text/css" rel="stylesheet" href="../css/app.css?67b3301d" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Key Loops</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p class="ps0"><span class="ts1">&nbsp;</span></p>
      <p class="ps3"><span class="ts4">A key loop is a </span><a href="templatefiles.htm" class="hs3">template file</a><span class="ts4">&nbsp;construct which allows you to iterate through the collection of keys that CodeGen has information about.&nbsp; In order to use a key loop you must be processing a repository structure, either directly via the </span><a href="commandlinereference.htm#option_s" class="hs1">&ndash;s command line option</a><span class="ts4">, or because the structure is referenced by the UI Toolkit input window that you are processing via the </span><a href="commandlinereference.htm#option_w" class="hs1">&ndash;w command line option</a><span class="ts4">.</span></p>
      <p class="ps3"><span class="ts4">If a key loop is encountered while processing a structure that does not have any keys defined, the key loop is ignored.</span></p>
      <p class="ps10"><span class="ts1">Note:</span><span class="ts3">&nbsp;The Synergy/DE Repository does not have an adequate mechanism to ensure that repository key definitions match the actual key definitions of the ISAM files being represented. Because of this, CodeGen considers the primary key to be the first key defined in the repository, and assumes that the alternate keys will immediately follow the primary key definition, and be in the correct sequence, as defined in the ISAM file.&nbsp; Any foreign keys should be defined after all of the access key definitions.</span></p>
      <p class="ps3"><span class="ts4">Key loops are delimited by a matching pair of </span><span class="ts6">&lt;KEY_LOOP&gt;</span><span class="ts4">&nbsp;and </span><span class="ts6">&lt;/KEY_LOOP&gt;</span><span class="ts4">&nbsp;tags that surround the template code to be inserted for each key.</span></p>
      <p class="ps3"><span class="ts4">Key loop tokens are tokens that can only be used within a key loop:</span></p>
      <p class="ps2"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="keyloopexpansiontokens.htm" class="hs3">Key Loop Expansion Tokens</a></p>
      <p class="ps2"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="keyloopexpressiontokens.htm" class="hs3">Key Loop Expression Tokens</a></p>
      <p class="ps3"><span class="ts4">There are two types of key loops, multi-line key loops and in-line key loops.</span></p>
      <h2 class="hd2"><a id="KEY_LOOP"></a><span class="ts2">Multi-Line Key Loops</span></h2>
      <p class="ps3"><span class="ts4">Multi-line key loops occur when the opening and closing key loop tags appear on separate lines in a template file, and delimit one or more entire lines of template code, like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;KEY_LOOP&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">Multi-line key loops generate one or more lines of output code for each key that is processed.</span></p>
      <h2 class="hd1"><span class="ts2">In-Line Key Loops</span></h2>
      <p class="ps3"><span class="ts4">In-line key loops exist when the opening and closing key loop tags appear on the same line in a template file, and delimit part of a line of template code, like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;KEY_LOOP&gt; code &lt;/KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">In-line key loops generate code into the current output line only.</span></p>
      <p class="ps3"><span class="ts4">Foreign keys are ignored when processing key loops.</span></p>
      <p class="ps3"><span class="ts4">The code between the opening and closing tags of a key loop is repeated for each key in the structure being processed.</span></p>
      <p class="ps3"><span class="ts4">This code within a key loop can contain other generic and structure tokens, and can also contain special key loop tokens, which are discussed later.</span></p>
      <p class="ps3"><span class="ts4">Key loop tokens can only be used inside a key loop, and a key loop can&rsquo;t be declared within any other loop construct except structure loops.</span></p>
      <h2 class="hd2"><a id="ALTERNETE_KEY_LOOP"></a><span class="ts2">Alternate Key Loops</span></h2>
      <p class="ps3"><span class="ts4">An alternate key loop is similar to a key loop; except that only alternate keys are processed (i.e. the primary key is skipped, and foreign keys are also ignored).&nbsp; As with key loops, CodeGen supports both multi-line and in-line alternate key loops.</span></p>
      <p class="ps3"><span class="ts4">A multi-line alternate key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;ALTERNATE_KEY_LOOP&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/ALTERNATE_KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">And an in-line alternate key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;ALTERNATE_KEY_LOOP&gt; code &lt;/ALTERNATE_KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">Multi-line alternate key loops generate one or more lines of output code for each key that is processed, whereas in-line alternate key loops generate code into the current output line only.</span></p>
      <h2 class="hd2"><a id="KEY_LOOP_UNIQUE"></a><span class="ts2">Unique Key Loops</span></h2>
      <p class="ps3"><span class="ts4">A unique key loop is similar to a regular key loop; except that in addition to excluding foreign keys, it excludes any keys that use the exact same segments as a key that has already been processed.</span></p>
      <p class="ps3"><span class="ts4">A multi-line unique key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;KEY_LOOP_UNIQUE&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/KEY_LOOP_UNIQUE&gt;</span></p>
      <p class="ps3"><span class="ts4">And an in-line unique key loop looks like this:</span></p>
      <p class="ps12"><span class="ts5">[code] </span><span class="ts6">&lt;KEY_LOOP_UNIQUE&gt; code &lt;/KEY_LOOP_UNIQUE&gt;</span><span class="ts5">&nbsp;[code]</span></p>
      <p class="ps3"><span class="ts4">Multi-line unique key loops generate one or more lines of output code for each key that is processed, whereas in-line unique key loops generate code into the current output line only.</span></p>
      <h2 class="hd2"><a id="ALTERNATE_KEY_LOOP_UNIQUE"></a><span class="ts2">Unique Alternate Key Loops</span></h2>
      <p class="ps3"><span class="ts4">A unique alternate key loop is similar to a regular key loop; except that in addition to excluding the primary key and any foreign keys, it also excludes any keys that have the exact same segments as either the primary key, or an earlier alternate key.</span></p>
      <p class="ps3"><span class="ts4">A multi-line unique alternate key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;ALTERNATE_KEY_LOOP_UNIQUE&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/ALTERNATE_KEY_LOOP_UNIQUE&gt;</span></p>
      <p class="ps3"><span class="ts4">And an in-line unique alternate key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;ALTERNATE_KEY_LOOP_UNIQUE&gt; code &lt;/ALTERNATE_KEY_LOOP_UNIQUE&gt;</span></p>
      <p class="ps3"><span class="ts4">Multi-line unique alternate key loops generate one or more lines of output code for each key that is processed, whereas in-line unique alternate key loops generate code into the current output line only.</span></p>
      <h2 class="hd2"><a id="PrimaryKeyBlock"></a><span class="ts2">Primary Key Blocks</span></h2>
      <p class="ps3"><span class="ts4">A primary key block is similar to a key loop; except that only the primary key is processed (i.e. all alternate keys are skipped). As with key loops, CodeGen supports both multi-line and in-line primary key blocks.</span></p>
      <p class="ps3"><span class="ts4">A multi-line primary key block looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;PRIMARY_KEY&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/PRIMARY_KEY&gt;</span></p>
      <p class="ps3"><span class="ts4">And an in-line primary key block looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;PRIMARY_KEY&gt; code &lt;/PRIMARY_KEY&gt;</span></p>
      <p class="ps3"><span class="ts4">Multi-line primary key blocks generate one or more lines of output code as the primary key is processed, whereas in-line primary key blocks generate code into the current output line only.</span></p>
      <h2 class="hd2"><a id="UniqueKeyBlock"></a><span class="ts2">Unique Key Blocks</span></h2>
      <p class="ps3"><span class="ts4">A unique key block is similar to a key loop; except that only the first unique key (i.e. the first key that does not allow duplicate key values) is processed. This will usually be the primary key, but could be some alternate key in the rare case that the primary key allows duplicates. As with key loops, CodeGen supports both multi-line and in-line unique key blocks.</span></p>
      <p class="ps3"><span class="ts4">A multi-line unique key block looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;UNIQUE_KEY&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/UNIQUE_KEY&gt;</span></p>
      <p class="ps3"><span class="ts4">And an in-line unique key block looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;UNIQUE_KEY&gt; code &lt;/UNIQUE_KEY&gt;</span></p>
      <p class="ps3"><span class="ts4">Multi-line unique key blocks generate one or more lines of output code as the first unique key is processed, whereas in-line unique key blocks generate code into the current output line only.</span></p>
      <p class="ps3"><span class="ts4">If you attempt to use a unique key block in conjunction with a repository structure that does not have any unique keys then an error will be generated. You can avoid this by isolating the unique key block using an </span><a href="structureexpressiontokens.htm#STRUCTURE_HAS_UNIQUE_KEY" class="hs3">&lt;IF STRUCTURE_HAS_UNIQUE_KEY&gt;</a><span class="ts4">&nbsp;expression.</span></p>
      <h2 class="hd2"><a id="ForeignKeyLoop"></a><span class="ts2">Foreign Key Loops</span></h2>
      <p class="ps3"><span class="ts4">A foreign key loop is a key loop where ONLY foreign keys are processed. CodeGen supports both multi-line and in-line alternate key loops.</span></p>
      <p class="ps3"><span class="ts4">A multi-line foreign key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;FOREIGN_KEY_LOOP&gt;</span><br /><span class="ts6">code</span><br /><span class="ts6">&lt;/FOREIGN_KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">And an in-line foreign key loop looks like this:</span></p>
      <p class="ps12"><span class="ts6">&lt;FOREIGN_KEY_LOOP&gt; code &lt;/FOREIGN_KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">Multi-line foreign key loops generate one or more lines of output code for each key that is processed, whereas in-line foreign key loops generate code into the current output line only.</span></p>
      <h2 class="hd2"><a id="PARTIAL_KEY_LOOP"></a><span class="ts2">Partial Key Loop</span></h2>
      <p class="ps3"><span class="ts4">A partial key loop is a loop that allows you to process subsets of the segments of </span><span class="ts7">multi-segment access keys</span><span class="ts4">&nbsp;that have a corresponding </span><span class="ts7">CODEGEN_PARTIAL_KEY_n</span><span class="ts4">&nbsp;token present in the structures long description, like this:</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; CODEGEN_PARTIAL_KEY_n[=x[,x…];]</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">Where n represents the access key number, and x represents the number of segments to be processed.</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">There are two types of partial key loop, a multi-line partial key loop:</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &lt;PARTIAL_KEY_LOOP&gt;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; code</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &lt;/PARTIAL_KEY_LOOP&gt;</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">And an in-line partial key loop:</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">&nbsp;&nbsp;&nbsp; &lt;PARTIAL_KEY_LOOP&gt; code &lt;/PARTIAL_KEY_LOOP&gt;</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts7">Processing Rules</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p class="ps21"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts4">Access keys that only have a single segment will not be processed by a partial key loop.</span></p>
      <p class="ps21"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts4">Access keys that do not have a matching CODEGEN_PARTIAL_KEY_n token will not be processed by a partial key loop.</span></p>
      <p class="ps21"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts4">Access keys that have a matching CODEGEN_PARTIAL_KEY_n token but without segment numbers specified, will be processed for each number of segments except all segments.</span></p>
      <p class="ps21"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts4">If the structure has no access keys, or no keys are selected for processing, partial key loops are ignored, no output is produced, and no error is generated.</span></p>
      <p class="ps21"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts4">When using a partial key loop, key segments should only be iterated by using a </span><a href="keysegmentloops.htm" class="hs3">Key Segment Loop</a><span class="ts5">&nbsp;(&lt;SEGMENT_LOOP&gt;)</span><span class="ts4">. Other types of segment loop such as </span><a href="keysegmentloops.htm#KeySegmentFilterLoop" class="hs3">Key Segment Filter Loops</a><span class="ts4">, </span><a href="keysegmentloops.htm#FirstSegmentRestrictions" class="hs3">First Segment Restrictions</a><span class="ts4">&nbsp;and </span><a href="keysegmentloops.htm#SecondSegmentRestrictions" class="hs3">Second Segment Restrictions</a><span class="ts4">&nbsp;do not honor </span><span class="ts5">CODEGEN_PARTIAL_KEY_n</span><span class="ts4">&nbsp;processing rules.</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts7">Examples</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">For example, if a file has an access key number 2 that has 5 segments, and the following token is used:</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; CODEGEN_PARTIAL_KEY_2=3,4;</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">Then the partial key loop will process that key two times. The first time the key is processed, the key segment loop will expose only the first three segments, and the second time the key segment loop will expose 4 segments.</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">To be clear, the token above does NOT say process key 2 with only segments 3 and 4, it says process the key twice, once with three segments and once with 4.</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">If the following token is used with the same 5-segment key:</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; CODEGEN_PARTIAL_KEY_2</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">The key will be processed four times, once with only the first segment, once with the first two segments, once with the first three segments, and once with the first four segments.</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <h2 class="hd1"><span class="ts2">Key Loop Example</span></h2>
      <p class="ps3"><span class="ts4">Template code like this:</span></p>
      <p class="ps12"><span class="ts5">&lt;KEY_LOOP&gt;</span></p>
      <p class="ps12"><span class="ts5">KEY &lt;KEY_NUMBER&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">START</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;SEGMENT_LOOP&gt;&lt;SEGMENT_POSITION&gt;&lt;:&gt;&lt;/SEGMENT_LOOP&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">LENGTH</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;SEGMENT_LOOP&gt;&lt;SEGMENT_LENGTH&gt;&lt;:&gt;&lt;/SEGMENT_LOOP&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">TYPE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;SEGMENT_LOOP&gt;&lt;segment_type&gt;&lt;:&gt;&lt;/SEGMENT_LOOP&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;SEGMENT_LOOP&gt;&lt;segment_sequence&gt;&lt;:&gt;&lt;/SEGMENT_LOOP&gt;|</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NAME</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&quot;&lt;KEY_NAME&gt;&quot;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATES</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;IF DUPLICATES&gt;yes&lt;/IF&gt;&lt;IF NODUPLICATES&gt;no&lt;/IF&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;IF DUPLICATES&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATE_ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;IF DUPLICATESATFRONT&gt;lifo&lt;/IF&gt;&lt;IF DUPLICATESATEND&gt;fifo&lt;/IF&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;/IF&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">MODIFIABLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;IF CHANGES&gt;yes&lt;/IF&gt;&lt;IF NOCHANGES&gt;no&lt;/IF&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;IF NULLKEY&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NULL</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;key_nulltype&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;IF NULLVALUE&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">VALUE_NULL</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;KEY_NULLVALUE&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;/IF&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;/IF&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DENSITY</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&lt;KEY_DENSITY&gt;</span><br /><span class="ts5">&lt;/KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">Would process each of a structures defined access keys, and generate output code like this:</span></p>
      <p class="ps12"><span class="ts5">KEY 0</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">START</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">23</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">LENGTH</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">8</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">TYPE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">alpha</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ascending</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NAME</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&quot;PROJECT_KEY0&quot;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATES</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">no</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">MODIFIABLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">no</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DENSITY</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">50</span></p>
      <p class="ps12"><span class="ts5">KEY 1</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">START</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">31:41:51</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">LENGTH</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">10:10:3</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">TYPE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">alpha:alpha:alpha</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ascending:ascending:ascending</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NAME</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&quot;PROJECT_KEY1&quot;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATES</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">no</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">MODIFIABLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">no</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DENSITY</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">50</span></p>
      <p class="ps12"><span class="ts5">KEY 2</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">START</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">114</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">LENGTH</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">8</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">TYPE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">alpha</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ascending</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NAME</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&quot;PROJECT_KEY2&quot;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATES</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">yes</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATE_ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">fifo</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">MODIFIABLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">yes</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DENSITY</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">50</span></p>
      <p class="ps12"><span class="ts5">KEY 3</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">START</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">140:130</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">LENGTH</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">15:2</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">TYPE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">alpha:alpha</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ascending:ascending</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NAME</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&quot;PROJECT_KEY3&quot;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATES</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">yes</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATE_ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">fifo</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">MODIFIABLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">yes</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DENSITY</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">50</span></p>
      <p class="ps12"><span class="ts5">KEY 4</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">START</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">934</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">LENGTH</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">20</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">TYPE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">alpha</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ORDER</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">ascending</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">NAME</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">&quot;REPLICATION_KEY&quot;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DUPLICATES</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">no</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">MODIFIABLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">yes</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">DENSITY</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">50</span></p>
      <h2 class="hd1"><span class="ts2">Alternate Key Loop Example</span></h2>
      <p class="ps3"><span class="ts4">Template file code like this:</span></p>
      <p class="ps12"><span class="ts5">&lt;ALTERNATE_KEY_LOOP&gt;</span></p>
      <p class="ps12"><span class="ts5">;;-------------------------------------------------------------------------</span><br /><span class="ts5">;;Create index &lt;KEY_NUMBER&gt; (&lt;KEY_DESCRIPTION&gt;)</span><br /><span class="ts5">;;</span></p>
      <p class="ps12"><span class="ts5">if (ok)</span><br /><span class="ts5">begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; sql = &quot;CREATE &lt;KEY_UNIQUE&gt; INDEX IX_&lt;STRUCTURE_NAME&gt;_&lt;KEY_NAME&gt; &quot;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;ON &lt;STRUCTURE_NAME&gt;(&lt;SEGMENT_LOOP&gt;&lt;SEGMENT_NAME&gt; &lt;SEGMENT_ORDER&gt;&lt;,&gt;&lt;/SEGMENT_LOOP&gt;)&quot;</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp; call open_cursor</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp; if (ok)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call execute_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call close_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp; end</span><br /><span class="ts5">end</span></p>
      <p class="ps12"><span class="ts5">&lt;/ALTERNATE_KEY_LOOP&gt;</span></p>
      <p class="ps3"><span class="ts4">Would process each of a structures defined access keys, except for the primary key, and generate output code like this:</span></p>
      <p class="ps12"><span class="ts5">;;-------------------------------------------------------------------------</span><br /><span class="ts5">;;Create index 1 (Projects by customer)</span><br /><span class="ts5">;;</span></p>
      <p class="ps12"><span class="ts5">if (ok)</span><br /><span class="ts5">begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sql = &quot;CREATE UNIQUE INDEX IX_PROJECT_PROJECT_KEY1 &quot;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;ON PROJECT(CUSTOMER_ID ASC,CONTRACT_ID ASC,CONTRACT_PROJECT_ID ASC)&quot;</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call open_cursor</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ok)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call execute_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call close_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end</span><br /><span class="ts5">end</span></p>
      <p class="ps12"><span class="ts5">&nbsp;</span></p>
      <p class="ps12"><span class="ts5">;;-------------------------------------------------------------------------</span><br /><span class="ts5">;;Create index 2 (Projects by start date)</span><br /><span class="ts5">;;</span></p>
      <p class="ps12"><span class="ts5">if (ok)</span><br /><span class="ts5">begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sql = &quot;CREATE INDEX IX_PROJECT_PROJECT_KEY2 &quot;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;ON PROJECT(START_DATE ASC)&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call open_cursor</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ok)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call execute_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call close_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end</span><br /><span class="ts5">end</span></p>
      <p class="ps12"><span class="ts5">;;-------------------------------------------------------------------------</span><br /><span class="ts5">;;Create index 3 (Projects by consultant and status)</span><br /><span class="ts5">;;</span></p>
      <p class="ps12"><span class="ts5">if (ok)</span><br /><span class="ts5">begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sql = &quot;CREATE INDEX IX_PROJECT_PROJECT_KEY3 &quot;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;ON PROJECT(LEAD_CONSULTANT ASC,CURRENT_STATUS ASC)&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call open_cursor</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ok)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call execute_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call close_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end</span><br /><span class="ts5">end</span></p>
      <p class="ps12"><span class="ts5">;;-------------------------------------------------------------------------</span><br /><span class="ts5">;;Create index 4 (SQL Timestamp Key)</span><br /><span class="ts5">;;</span></p>
      <p class="ps12"><span class="ts5">if (ok)</span><br /><span class="ts5">begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sql = &quot;CREATE UNIQUE INDEX IX_PROJECT_REPLICATION_KEY &quot;</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;ON PROJECT(REPLICATION_KEY ASC)&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call open_cursor</span></p>
      <p class="ps12"><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ok)</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; begin</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call execute_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call close_cursor</span><br /><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end</span><br /><span class="ts5">end</span></p>
      <h2 class="hd1"><span class="ts2">Primary Key Block Example</span></h2>
      <p class="ps3"><span class="ts4">Template file code like this:</span></p>
      <p class="ps12"><span class="ts5">&lt;PRIMARY_KEY&gt;</span><br /><span class="ts5">&lt;SEGMENT_LOOP&gt;</span><br /><span class="ts5">{xfParameter(name=&quot;&lt;SegmentName&gt;&quot;)}</span><br /><span class="ts5">required in&nbsp; a&lt;SegmentName&gt;, &lt;segment_spec&gt;</span><br /><span class="ts5">&lt;/SEGMENT_LOOP&gt;</span><br /><span class="ts5">&lt;/PRIMARY_KEY&gt;</span><br /><br /><span class="ts5">{xfParameter(name=&quot;&lt;StructureName&gt;&quot;,collectionType=&quot;structure&quot;,structure=&quot;&lt;STRUCTURE_NAME&gt;&quot;,dataTable=&quot;true&quot;)}</span><br /><span class="ts5">required out a&lt;StructureName&gt;s, @ArrayList</span></p>
      <p class="ps3"><span class="ts4">When processed for a structure with only a single segment in it's primary key, would produce output like this</span></p>
      <p class="ps12"><span class="ts5">{xfParameter(name=&quot;ProjectId&quot;)}</span><br /><span class="ts5">required in&nbsp; aProjectId, d8</span><br /><br /><span class="ts5">{xfParameter(name=&quot;Project&quot;,collectionType=&quot;structure&quot;,structure=&quot;PROJECT&quot;,dataTable=&quot;true&quot;)}</span><br /><span class="ts5">required out aProjects, @ArrayList</span></p>
      <p class="ps12"><span class="ts4">When processed for a structure with multiple segments in its primary key, would produce output like this:</span></p>
      <p class="ps12"><span class="ts5">{xfParameter(name=&quot;TaskId&quot;)}</span><br /><span class="ts5">required in&nbsp; aTaskId, d3</span></p>
      <p class="ps12"><span class="ts5">{xfParameter(name=&quot;AttachmentId&quot;)}</span><br /><span class="ts5">required in&nbsp; aAttachmentId, d3</span></p>
      <p class="ps12"><span class="ts5">{xfParameter(name=&quot;ProjectAttachment&quot;,collectionType=&quot;structure&quot;,structure=&quot;PROJECT_ATTACHMENT&quot;,dataTable=&quot;true&quot;)}</span><br /><span class="ts5">required out aProjectAttachments, @ArrayList</span></p>
      <p class="ps3"><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <p><span class="ts4">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps11"><span class="ts11">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>