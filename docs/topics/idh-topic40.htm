<!DOCTYPE html>
<html>
<head lang="en">
<title>Method Catalog Extensions File</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?cc828d8d" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?cc828d8d" />
<link type="text/css" rel="stylesheet" href="../css/app.css?cc828d8d" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Method Catalog Extensions File</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p class="ps0"><span class="ts1">&nbsp;</span></p>
      <p><span class="ts3">Some of the capabilities of CodeGen require that you provide additional information about a method catalogs interfaces, methods and parameters, beyond what can be specified in the catalog itself. To achieve this CodeGen allows you to provide this additional information as necessary by creating and naming a special JSON file. The structure of the file looks like this:</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts5">[</span></p>
      <p><span class="ts5">&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &quot;InterfaceName&quot;: &quot;&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &quot;CustomExpansionTokens&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Name&quot;: &quot;&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Value&quot;: &quot;&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; ],</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &quot;CustomExpressionTokens&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; ],</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &quot;Methods&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;MethodName&quot;: &quot;&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;CustomExpansionTokens&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Name&quot;: &quot;&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Value&quot;: &quot;&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;</span><span class="ts5">CustomExpressionTokens</span><span class="ts5">&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Parameters&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;ParameterName&quot;: &quot;&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;CustomExpansionTokens&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Name&quot;: &quot;&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Value&quot;: &quot;&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;</span><span class="ts5">CustomExpressionTokens</span><span class="ts5">&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp; ]</span></p>
      <p><span class="ts5">&nbsp;}</span></p>
      <p><span class="ts5">]</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">As you can see the file contains an array of objects, each of which relates to an interface defined in your method catalog. Each interface has a property named InterfaceName that allows you to specify the name of the associated interface in the method catalog.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">From that point on everything is optional, you only need specify as much information as you need in order to define the custom tokens that are required to activate whatever piece of CodeGen functionality you are trying to use.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">For example, if you need to specify a custom expression SAVE_RESULT_TO_CONTEXT and a custom expansion token SAVE_BUFFER_NAME with a value of OpsBufferValue, for method ops_buffer_read in interface asp, your JSON file would need to look like this:</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts5">[</span></p>
      <p><span class="ts5">&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &quot;InterfaceName&quot;: &quot;asp&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; &quot;Methods&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;MethodName&quot;: &quot;ops_buffer_read&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;</span><span class="ts5">CustomExpressionTokens</span><span class="ts5">&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;SAVE_RESULT_TO_CONTEXT&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;CustomExpansionTokens&quot;: [</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Name&quot;: &quot;SAVE_BUFFER_NAME&quot;,</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;Value&quot;: &quot;OpsBufferValue&quot;</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]</span><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
      <p><span class="ts5">&nbsp;&nbsp;&nbsp; ]</span></p>
      <p><span class="ts5">&nbsp; }</span></p>
      <p><span class="ts5">]</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">Once you have created your JSON file you can specify its use during code generation via the -smcext command line option.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">To use the </span><span class="ts5">SAVE_RESULT_TO_CONTEXT</span><span class="ts3">&nbsp;expression in a template file you would use expression syntax like </span><span class="ts5">&lt;IF CUSTOM_METHOD_SAVE_RESULT_TO_CONTEXT&gt;</span><span class="ts3">. Note that the expression will only evaluate to true for methods that have the custom expression defined in the extensions file, all other methods will evaluate to false.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">To use the </span><span class="ts5">SAVE_BUFFER_NAME</span><span class="ts3">&nbsp;expansion token in a template file you would use a syntax like </span><span class="ts5">&lt;SAVE_BUFFER_NAME&gt;</span><span class="ts3">. Note that the expansion to the associated value (OpsBufferValue) will only occur when processing methods that have the custom expansion token definedin the extensions file, no value will be inserted for other methods.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">Note that custom expression and expansion token names are not case sensitive, always being converted to uppercase for comparison, but the case of expansion token values is preserved and inserted exactly as typed.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps11"><span class="ts11">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>