<!DOCTYPE html>
<html>
<head lang="en">
<title>Preparing Your Repository</title>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.1 (Build 24.1202)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?b1fab730" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?cb49c508" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?cb49c508" />
<link type="text/css" rel="stylesheet" href="../css/app.css?cb49c508" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?b1fab730"></script>
<script src="../js/tabs.min.js?b1fab730"></script>
<script src="../js/jquery.cookie.js?b1fab730"></script>
<script src="../js/headroom.min.js?b1fab730"></script>
<script src="../js/app.min.js?b1fab730"></script>
<script src="../js/search.min.js?b1fab730"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Preparing Your Repository</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p class="ps0"><span class="ts1">&nbsp;</span></p>
      <p class="ps5"><span class="ts3">CodeGen is almost always used with a repository structure providing the metadata that is to be used for the generation of the source file, and many of the tokens require the use of a repository structure.</span></p>
      <p class="ps5"><span class="ts3">The basic requirement is that you have a structure definition, and that structure definition includes one or more field definitions. Some tokens also require that keys are defined, and some require file definitions with structure assignments.</span></p>
      <p class="ps5"><span class="ts3">If you don't already have a repository then you can load most of the information that you will need by reading existing record layout files into repository structures.</span></p>
      <h2 class="hd1"><span class="ts2">Repository Structure Restrictions</span></h2>
      <p class="ps5"><span class="ts3">In order to be used successfully with CodeGen, Repository structures must meet the following requirements.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Enumeration, binary and structure fields are not currently supported by CodeGen.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Overlay fields are allowed, but will generally be ignored by CodeGen.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">All keys must be correctly defined to exactly match the appropriate ISAM file.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Only a single tag is allowed and that tag must be a FIELD.EQ.VALUE type.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">The use of some tokens requires that the structure being processed is assigned to a file definition, and some require that keys are defined.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Keys must be defined in the correct sequence. CodeGen determines key numbers by the order in which keys are defined in the repository structure. Define access keys in the correct sequence, and define foreign keys after all access key definitions.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">If you intend to generate source code for languages other than Synergy, then you should avoid giving fields names which may be reserved words in the language concerned.</span></p>
      <p class="ps20"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a id="NOCODEGEN"></a><span class="ts4">If you wish to prevent a structure from being processed by CodeGen then you can add the text @NOCODEGEN to the structures user text field or long description.</span></p>
      <p class="ps20"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a id="DISPLAY_FIELD"></a><span class="ts4">To specify that a field in a structure is the structures &ldquo;display field&rdquo; you can add the text @CODEGEN_DISPLAY_FIELD to the fields&rsquo; user text string or long description. For more information refer to the </span><a href="structureexpansiontokens.htm#DISPLAY_FIELD" class="hs17">&lt;DISPLAY_FIELD&gt;</a><span class="ts4">&nbsp;token.</span></p>
      <h2 class="hd2"><a id="ARRAY_FIELDS"></a><span class="ts2">Array Fields</span></h2>
      <p class="ps5"><span class="ts3">CodeGen supports array fields, but these arrays are expanded into multiple non-array fields. In other words each array field encountered is replaced by multiple fields with the same data type and size as the array field.</span></p>
      <p class="ps5"><span class="ts3">When an array is expanded to multiple individual fields, the name of each field is amended to include the array element definition. For example, the field MYFIELD, [2]A10 will be expanded to two separate fields named MYFIELD[1] and MYFIELD[2].</span></p>
      <h2 class="hd1"><span class="ts2">Group Fields</span></h2>
      <p class="ps5"><span class="ts3">CodeGen supports groups, including group arrays. When processed by CodeGen, groups are expanded. In other words the fields in the group become fields in the main structure, and the group field is removed.</span></p>
      <p class="ps5"><span class="ts3">By default, group member field names are prefixed with the name of the parent group field followed by a period, but this behavior can be overridden with the </span><a href="commandlinereference.htm" class="hs12">&ndash;g f command line option</a><span class="ts3">.&nbsp; For example, if a group called ADDRESS contains a field called STREET, the name of the field used by CodeGen will be:</span></p>
      <p class="ps15"><span class="ts5">ADDRESS.STREET</span></p>
      <p class="ps5"><span class="ts3">But if you were to use the </span><a href="commandlinereference.htm#option_g" class="hs0">&ndash;g f command line option</a><span class="ts3">&nbsp;then the name of the field would be:</span></p>
      <p class="ps15"><span class="ts5">STREET</span></p>
      <p class="ps5"><span class="ts3">Obviously, in this scenario you would need to make sure that the name did not clash with any other identifiers in the same structure.</span></p>
      <p class="ps5"><span class="ts3">If the repository group definition includes a &ldquo;member prefix&rdquo; then this prefix is added to the name of each field in the group, but this behavior can be overridden with the </span><a href="commandlinereference.htm#option_g" class="hs15">&ndash;g r command line option</a><span class="ts3">.</span></p>
      <p class="ps5"><span class="ts3">For example, if a group called ADDRESS contains a field called STREET, and the group field defines a member prefix of HOME_, the name of the field used by CodeGen will be:</span></p>
      <p class="ps15"><span class="ts5">ADDRESS.HOME_STREET</span></p>
      <p class="ps5"><span class="ts3">With the </span><a href="commandlinereference.htm#option_g" class="hs0">&ndash;g f command line option</a><span class="ts3">&nbsp;the name would be:</span></p>
      <p class="ps15"><span class="ts5">HOME_STREET</span></p>
      <p class="ps5"><span class="ts3">With the </span><a href="commandlinereference.htm#option_g" class="hs0">&ndash;g r command line option</a><span class="ts3">&nbsp;the name would be:</span></p>
      <p class="ps15"><span class="ts5">ADDRESS.STREET</span></p>
      <p class="ps5"><span class="ts3">And with the </span><a href="commandlinereference.htm#option_g" class="hs0">&ndash;g f r command line options</a><span class="ts3">&nbsp;the name would be:</span></p>
      <p class="ps15"><span class="ts5">STREET</span></p>
      <p class="ps5"><span class="ts3">If a group member field is declared as an array then it will be treated as discussed earlier under </span><a href="preparingyourrepository.htm#ARRAY_FIELDS" class="hs15">Array Fields</a><span class="ts3">.</span></p>
      <h2 class="hd1"><span class="ts2">Loading Include Files</span></h2>
      <p class="ps5"><span class="ts3">Before you load the fields from an include file into a repository structure it is often best to make a copy of the include file, and then perform some simple &quot;cleanup&quot; within the file before loading it into the repository structure:</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">The repository can load the fields from a single record (or common) in an include file into a repository structure, so if the include file has multiple records defined then first identify which record you wish to load.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Repository will use any comment which follows a field definition as the description for the field, so clean up the comments. If your field comments include things like position information then you may want to remove them. Note that if the positions are delimited with specific identifiable characters (for example if they are within parentheses) then you can specify these characters when you load the fields into repository, so in this case you don't need to manually edit them out.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Repository will load any overlays that are defined within the record to be loaded, but if you have overlays that you want to preserve that are defined as separate overlay records (using record ,X) then you might want to consider moving those overlay fields into the actual record definition.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Remember that generally CodeGen will ignore overlay fields however, so review any overlays and make sure that the fields that you are most likely to want to use in generated code are the &quot;real&quot; fields, and those less likely to be useful are the overlays. An example would be if you have date fields where the real fields are individual year, month and day, and there is a full date overlay. When generating code it is most likely that you will want to access the full date and not the individual fields, so switching the fields and overlays around would probably be best.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">If you have full overlay records (one record followed by one or more record, X's) then you will probably want to load each of the overlays into a separate repository structure.</span></p>
      <p class="ps5"><span class="ts3">Once you have cleaned up the include file you are ready to load the file into a new repository structure. The procedure is as follows:</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Start repository and Select Modify &gt; Structures.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Click the Add button (or press the Insert key) to add a new structure.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Provide a name for the structure. It is usually best to use the original record name as the structure name.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Set the file type. Most structures should be set to &quot;DBL ISAM&quot;.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Provide a meaningful description of the structure, such as &quot;Customer Master Record&quot;.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">If the structure is to be associated with a file which has multiple record layouts within the data file, set the tag to tell repository and other tools how to detect this particular record layout within the file. If this is not the case then select None.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Click the OK button to create the new structure.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Click the Attributes button (ore press F3)</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">From the menu, select Attributes &gt; Fields.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">From the menu, select Field Functions &gt; Load Fields (or press F9).</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Enter the name of the include file (or use the file browser to locate it).</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">If the include file has multiple records, enter the number of the record to be read.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">If you want to strip information (for example position between parentheses) from the field descriptions then enter the characters that delimit the information to be removed.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Click the OK button to load the fields into the structure.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Press the F4 key to exit from the fields list.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Press the F4 key again to exit from the structure, and save the changes.</span></p>
      <p class="ps12"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Keep pressing F4 to exit from the repository program.</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps14"><span class="ts11">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>